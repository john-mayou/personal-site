name: Deploy Application

on:
  pull_request:
    branches: main
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_KEY }}

      - name: Terraform Init + Apply
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve \
            -var="do_api_key=${{ secrets.DO_API_KEY }}" \
            -var="do_ssh_public_key=${{ secrets.DO_SSH_PUBLIC_KEY }}" \
            -var="cloudflare_api_key=${{ secrets.CF_API_KEY }}" \
            -var="cloudflare_zone_id=${{ secrets.CF_ZONE_ID }}"

      - name: Get Droplet IPs
        run: |
          cd terraform
          echo "DO_STAGING_IP=$(terraform output -raw staging_ip)" >> $GITHUB_ENV
          echo "DO_PROD_IP=$(terraform output -raw prod_ip)" >> $GITHUB_ENV

      - name: Log in to DigitalOcean Registry
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_API_KEY }}

      - name: Set Deploy Version
        run: echo "DEPLOY_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Build and Push Docker Images
        run: |
          docker buildx build --platform linux/amd64 -t registry.digitalocean.com/personal-site/api:$DEPLOY_VERSION -f api/Dockerfile .
          docker push registry.digitalocean.com/personal-site/api:$DEPLOY_VERSION
          docker buildx build --platform linux/amd64 -t registry.digitalocean.com/personal-site/frontend:$DEPLOY_VERSION -f frontend/Dockerfile ./frontend
          docker push registry.digitalocean.com/personal-site/frontend:$DEPLOY_VERSION

      - name: Deploy to Staging
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DO_STAGING_IP }}
          username: root
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            cd /app
            git pull origin main
            touch .env
            echo "DEPLOY_ENV=staging" >> .env
            echo "DEPLOY_VERSION=$DEPLOY_VERSION" >> .env
            docker-compose -f docker-compose.deploy.yml pull
            docker-compose -f docker-compose.deploy.yml up -d

      - name: Staging Health Check
        run: curl -sf https://staging.johnmayou.com/health

      - name: Deploy to Prod
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.DO_PROD_IP }}
          username: root
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            cd /app
            touch .env
            echo "DEPLOY_ENV=production" >> .env
            echo "DEPLOY_VERSION=$DEPLOY_VERSION" >> .env
            docker-compose -f docker-compose.deploy.yml pull
            docker-compose -f docker-compose.deploy.yml up -d
